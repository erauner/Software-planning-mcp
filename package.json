{
  "name": "software-planning-tool",
  "version": "0.1.0",
  "description": "A Model Context Protocol server",
  "private": true,
  "type": "module",
  "bin": {
    "software-planning-tool": "./build/index.js"
  },
  "files": [
    "build"
  ],
  "scripts": {
    "build": "npm run check:stdout && tsc && node -e \"require('fs').chmodSync('build/index.js', '755')\"",
    "build:unsafe": "tsc && node -e \"require('fs').chmodSync('build/index.js', '755')\"",
    "prepare": "npm run build",
    "watch": "tsc --watch",
    "inspector": "npx @modelcontextprotocol/inspector build/index.js",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "npm run build && node --test test/storage-adapters.test.js test/repo-identifier.test.js test/prompts.test.js test/storage.test.js",
    "test:integration": "npm run build && node --test test/session-management.test.js test/mcp-server.test.js",
    "test:e2e": "npm run build && node --test test/storage-modes.e2e.test.js",
    "test:file-mode": "STORAGE_MODE=file npm run test",
    "test:redis-mode": "STORAGE_MODE=redis REDIS_URL=redis://localhost:6379 npm run test",
    "test:all-modes": "npm run test:file-mode && npm run test:redis-mode",
    "test:watch": "npm run build && node --test --watch test/*.test.js",
    "test:coverage": "npm run build && node --test --experimental-test-coverage test/*.test.js",
    "check:stdout": "node scripts/check-stdout-pollution.mjs",
    "test:stdout": "npm run build:unsafe && node --test test/stdout-pollution.test.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "0.6.0",
    "ioredis": "^5.3.2",
    "dotenv": "^16.0.3",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@types/node": "^20.11.24",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.44.0",
    "typescript": "^5.3.3"
  }
}
